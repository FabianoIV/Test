@using Grafik.Data
@using Grafik.Services

@inject DialogService DialogService
@inject ApplicationDbContext DbContext
@inject NotificationService NotificationService
@inject ICustomAuthService authService
@inject ICustomNotificationsService CustomNotificationsService

@code {
    [Parameter]
    public required PlanningSession PlanningSession { get; set; }

    public ExcludedTime? ExcludedTime { get; set; }

    protected override void OnInitialized()
    {
        ExcludedTime = new ExcludedTime
            {
                PlanningSessionId = PlanningSession.Id
            };

        base.OnInitialized();
    }

    async Task OnSubmit(ExcludedTime model)
    {
        if (!await authService.IsUserAuthenticated())
        {
            CustomNotificationsService.SendAuthorizationMissingNotification();
            DialogService.Close(null);
            return;
        }

        try
        {
            var now = DateTime.Now;

            DbContext.ExcludedTime.Add(model);
            DbContext.SaveChanges();

            CustomNotificationsService.SendExcludedTimeSucessNotification();
        }
        catch (Exception)
        {
            CustomNotificationsService.SendExcludedTimeErrorNotification();
        }

        DialogService.Close(model);
    }

    void OnCancel()
    {
        DialogService.Close(null);
    }
}

<RadzenTemplateForm TItem="ExcludedTime"
                    Data="@ExcludedTime"
                    Submit=@OnSubmit>
    <RadzenStack Gap="1rem">
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Od"
                         Style="width: 6rem;" />
            <RadzenDatePicker @bind-Value="@ExcludedTime.From"
                              Name="From"
                              ShowTime="true"
                              Style="width: 15rem;" />
            <RadzenRequiredValidator Component="From"
                                     Text="Data od jest wymagana" />
        </RadzenStack>

        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Do"
                         Style="width: 6rem;" />
            <RadzenDatePicker @bind-Value="@ExcludedTime.To"
                              Name="To"
                              ShowTime="true"
                              Style="width: 15rem;" />
            <RadzenRequiredValidator Component="To"
                                     Text="Data do jest wymagana" />
        </RadzenStack>

        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Wrap="FlexWrap.Wrap">
            <RadzenLabel Text="Powód"
                         Style="width: 6rem;" />
            <RadzenTextBox Name="Reason"
                           @bind-Value="@ExcludedTime.Reason"
                           Style="width: 15rem;" />
            <RadzenRequiredValidator Component="Reason"
                                     Text="Powód jest wymagany" />
        </RadzenStack>

        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End">
            <RadzenButton ButtonType="ButtonType.Submit" Text="Zapisz" ButtonStyle="ButtonStyle.Success" />
            <RadzenButton ButtonType="ButtonType.Button" Text="Anuluj" Click="OnCancel" />
        </RadzenStack>
    </RadzenStack>
</RadzenTemplateForm>
